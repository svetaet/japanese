@import './theme';

// Background and text colors combinations (looks)
$looks: [def alt inb inv];
@mixin look($look: def, $transition: false) {
	@if ($transition) {
		transition: background-color $theme-transition-duration, color $theme-transition-duration;
	}

	@if ($look == def) {
		background-color: v(clr1);
		color: v(clr4);
	} @else if ($look == alt) {
		background-color: v(clr2);
		color: v(clr4);
	} @else if ($look == inb) {
		background-color: v(clr3);
		color: v(clr1);
	} @else if ($look == inv) {
		background-color: v(clr4);
		color: v(clr1);
	} @else {
		@error "Wrong $look: #{$look} in @mixin look. Use one of these: #{looks}";
	}
}

@mixin shadow($size: 1, $color: v(sclr)) {
	@if ($size == 0) {
		box-shadow: 0 0 2px 0px $color;
	} @else if ($size == 1) {
		box-shadow: 0 0 2px 2px $color;
	} @else if ($size == 2) {
		box-shadow: 0 0 4px 4px $color;
	} @else if ($size == 3) {
		box-shadow: 0 0 5px 5px $color;
	} @else if ($size == 4) {
		box-shadow: 0 0 10px 8px $color;
	} @else {
		@error "Wrong $size: #{$size} in @mixin shadow.";
	}
}

@mixin insetShadow($size: 1, $color: v(sclr)) {
	@if ($size == 0) {
		box-shadow: inset 0 0 2px 0px $color;
	} @else if ($size == 1) {
		box-shadow: inset 0 0 2px 2px $color;
	} @else if ($size == 2) {
		box-shadow: inset 0 0 4px 4px $color;
	} @else if ($size == 3) {
		box-shadow: inset 0 0 5px 5px $color;
	} @else if ($size == 4) {
		box-shadow: inset 0 0 10px 8px $color;
	} @else {
		@error "Wrong $size: #{$size} in @mixin shadow.";
	}
}

@mixin scrollColor($color: v(border-clr)) {
	&::-webkit-scrollbar-thumb {
		border-color: $color !important;
	}
	&::-webkit-scrollbar-corner {
		background-color: $color !important;
	}
}

@mixin textOverflow($lines: 1) {
	overflow: hidden;
	text-overflow: ellipsis;

	@if ($lines == 1) {
		white-space: nowrap;
	} @else {
		// This is hack forcing browser to render properly.
		visibility: visible;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $lines;
	}
}

@mixin focused() {
	&:not(.disabled) {
		:global(.using-tab) &:focus,
		&:hover {
			@content;
		}
	}
}
